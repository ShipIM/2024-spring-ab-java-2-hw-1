type ResponseMessage {
    id: Int,
    author: String,
    text: String,
    creationDate: String,
    images: [ResponseImage]
}

type ResponseImage {
    filename: String,
    size: Int,
    reference: String
}

input OperationFilter {
    type: String,
    time: String
}

type ResponseOperation {
    type: String,
    message: String,
    time: String
}

input CreateMessage {
    text: String!,
    images: [String]
}

input AuthenticateUser {
    username: String!,
    password: String!
}

type ResponseJwt {
    access: String,
    refresh: String
}

type Query {
    getMessages: [ResponseMessage],
    getMessage(id: Int!): ResponseMessage,
    getMetas: [ResponseImage],
    getMeta(reference: String!): ResponseImage,
    getOperations(filter: OperationFilter): [ResponseOperation]
    authenticate(details: AuthenticateUser!): ResponseJwt
}

type Mutation {
    createMessage(message: CreateMessage!): ResponseMessage
    register(details: AuthenticateUser!): ResponseJwt,
    access(refresh: String!): ResponseJwt,
    refresh(refresh: String!): ResponseJwt,
    eraseRefresh(refresh: String!): Boolean
}